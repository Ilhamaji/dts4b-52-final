import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';
import axios from "axios";
import DefaulUrl from './DefaultUrl';

const initialState = {
  statusC: "",
  statusN: "",
  newsList: [],
};

export const gantiKategoriAsync = createAsyncThunk(
  'news/fetchCategoryList',
  async (kategori) => {
    let hasil = [];
    if(kategori!==''){
      hasil = await axios.get(`${DefaulUrl}&categories=${kategori}`);
    }else{
      hasil = await axios.get(`${DefaulUrl}`);
    }
    return hasil.data;
  }
);

/* export const getAntrianAsync = createAsyncThunk(
  'news/fetchNewsList',
  async () => {

    const hasil = await axios.get(`${DefaulUrl}&countries=us`);
    return hasil.data;
  }
); */

export const NewsSlice = createSlice({
  name: 'product',
  initialState,
  reducers: {
    /* dataFilter: (state, action) => {
      // const parameter = action.payload;
      // Redux Toolkit allows us to write "mutating" logic in reducers. It
      // doesn't actually mutate the state because it uses the Immer library,
      // which detects changes to a "draft state" and produces a brand new
      // immutable state based off those changes
      let filter = {
        "kodeproduk": ["CWT 01"],
        "id": [78, 7169],
      };
    }, */

    /* // Use the PayloadAction type to declare the contents of `action.payload`
    drawerposisi: (state, action) => {
      state.status = action.payload;
    }, */
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(gantiKategoriAsync.pending, (state) => {
        state.pesanC = 'loading';
      })
      .addCase(gantiKategoriAsync.rejected, (state) => {
        state.pesanC = 'rejected';
      })
      .addCase(gantiKategoriAsync.fulfilled, (state, action) => {
        state.pesanC = 'idle';
        state.newsList = action.payload;
      });
  },
});

export const { dataFilter } = NewsSlice.actions;

export const selectPesanC = (state) => state.news.pesanC;
export const selectPensanN = (state) => state.news.pesanN;
export const news = (state) => state.news.newsList;

export default NewsSlice.reducer;
